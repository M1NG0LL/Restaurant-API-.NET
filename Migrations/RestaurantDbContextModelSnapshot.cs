// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restaurant_API.Data;

#nullable disable

namespace Restaurant_API.Migrations
{
    [DbContext(typeof(RestaurantDbContext))]
    partial class RestaurantDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Restaurant_API.Model.Domain.Dessert", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PreparationTimeInMin")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Desserts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c4511eba-e269-4566-b56e-2ee3662a6dd2"),
                            Category = "Cake",
                            Description = "Rich chocolate layer cake",
                            IsAvailable = true,
                            Name = "Chocolate Cake",
                            PreparationTimeInMin = 10,
                            Price = 8.99m
                        },
                        new
                        {
                            Id = new Guid("d1e2f3a4-b5c6-7890-1234-56789abcdef3"),
                            Category = "Italian",
                            Description = "Classic Italian dessert",
                            IsAvailable = true,
                            Name = "Tiramisu",
                            PreparationTimeInMin = 5,
                            Price = 7.99m
                        },
                        new
                        {
                            Id = new Guid("414033df-b813-49d1-b1e6-e4722c17aa74"),
                            Category = "Ice Cream",
                            Description = "Vanilla with berries",
                            IsAvailable = true,
                            Name = "Ice Cream",
                            PreparationTimeInMin = 3,
                            Price = 5.99m
                        },
                        new
                        {
                            Id = new Guid("71e1f68e-adf1-451b-ad74-3974891ba91a"),
                            Category = "Pie",
                            Description = "Warm apple pie",
                            IsAvailable = true,
                            Name = "Apple Pie",
                            PreparationTimeInMin = 15,
                            Price = 6.99m
                        },
                        new
                        {
                            Id = new Guid("1d7be41b-5f4d-4398-9e2c-93d113016866"),
                            Category = "Cake",
                            Description = "New York style",
                            IsAvailable = true,
                            Name = "Cheesecake",
                            PreparationTimeInMin = 5,
                            Price = 7.99m
                        });
                });

            modelBuilder.Entity("Restaurant_API.Model.Domain.Drink", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("VolumeInMl")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Drinks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f1a2b3c4-d5e6-7890-1234-56789abcdef5"),
                            Description = "Red wine",
                            IsAvailable = true,
                            Name = "House Wine",
                            Price = 7.99m,
                            VolumeInMl = 175
                        },
                        new
                        {
                            Id = new Guid("a2b3c4d5-e6f7-7890-1234-56789abcdef6"),
                            Description = "Local IPA",
                            IsAvailable = true,
                            Name = "Craft Beer",
                            Price = 5.99m,
                            VolumeInMl = 500
                        },
                        new
                        {
                            Id = new Guid("b2c3d4e5-f6a7-7890-1234-56789abcdef7"),
                            Description = "Freshly squeezed",
                            IsAvailable = true,
                            Name = "Fresh Orange Juice",
                            Price = 3.99m,
                            VolumeInMl = 250
                        },
                        new
                        {
                            Id = new Guid("c2d3e4f5-a6b7-7890-1234-56789abcdef8"),
                            Description = "Mineral water",
                            IsAvailable = true,
                            Name = "Sparkling Water",
                            Price = 2.99m,
                            VolumeInMl = 330
                        },
                        new
                        {
                            Id = new Guid("d2e3f4a5-b6c7-7890-1234-56789abcdef9"),
                            Description = "Single shot",
                            IsAvailable = true,
                            Name = "Espresso",
                            Price = 2.99m,
                            VolumeInMl = 50
                        });
                });

            modelBuilder.Entity("Restaurant_API.Model.Domain.Meal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PreparationTimeInMin")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Meals");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-7890-1234-56789abcdef0"),
                            Category = "Main Course",
                            Description = "Fresh salmon with herbs",
                            Name = "Grilled Salmon",
                            PreparationTimeInMin = 25,
                            Price = 25.99m
                        },
                        new
                        {
                            Id = new Guid("b1c2d3e4-f5a6-7890-1234-56789abcdef1"),
                            Category = "Main Course",
                            Description = "Premium cut beef steak",
                            Name = "Beef Steak",
                            PreparationTimeInMin = 20,
                            Price = 29.99m
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7890-1234-56789abcdef2"),
                            Category = "Pasta",
                            Description = "Creamy pasta with chicken",
                            Name = "Chicken Alfredo",
                            PreparationTimeInMin = 15,
                            Price = 18.99m
                        },
                        new
                        {
                            Id = new Guid("d1e2f3a4-b5c6-7890-1234-56789abcdef3"),
                            Category = "Pizza",
                            Description = "Fresh vegetables on crispy base",
                            Name = "Vegetarian Pizza",
                            PreparationTimeInMin = 20,
                            Price = 16.99m
                        },
                        new
                        {
                            Id = new Guid("e1f2a3b4-c5d6-7890-1234-56789abcdef4"),
                            Category = "Salad",
                            Description = "Classic caesar with chicken",
                            Name = "Caesar Salad",
                            PreparationTimeInMin = 10,
                            Price = 12.99m
                        });
                });

            modelBuilder.Entity("Restaurant_API.Model.Domain.Seat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<Guid>("DessertId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DrinkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsOccupied")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReserved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("MealId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ReservationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TableNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DessertId");

                    b.HasIndex("DrinkId");

                    b.HasIndex("MealId");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("Restaurant_API.Model.Domain.Seat", b =>
                {
                    b.HasOne("Restaurant_API.Model.Domain.Dessert", "Dessert")
                        .WithMany()
                        .HasForeignKey("DessertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant_API.Model.Domain.Drink", "Drink")
                        .WithMany()
                        .HasForeignKey("DrinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant_API.Model.Domain.Meal", "Meal")
                        .WithMany()
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dessert");

                    b.Navigation("Drink");

                    b.Navigation("Meal");
                });
#pragma warning restore 612, 618
        }
    }
}
